<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>txlcn-demo</artifactId>
        <groupId>com.example.txlcn</groupId>
        <version>1.0.0.RELEASE</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <version>1.0.0.RELEASE</version>
    <artifactId>spring-demo-e</artifactId>

    <name>spring-demo-e</name>

    <dependencies>

        <dependency>
            <groupId>com.example.txlcn</groupId>
            <artifactId>demo-common</artifactId>
            <version>${project.version}</version>
        </dependency>

    </dependencies>

    <build>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- maven插件:docker-maven-plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>
                <executions>
                    <execution>
                        <id>build-image</id><!-- 要绑定到的生命周期的阶段 -->
                        <phase>package</phase><!-- 要绑定到的生命周期的阶段 -->
                        <goals> <!-- 要绑定的插件的目标 -->
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- 以下两行是为了docker push到DockerHub使用的。 -->
                    <serverId>docker-local</serverId>
                    <registryUrl>${docker.host}:${docker.port}</registryUrl>
                    <dockerHost>http://${docker.host}:2375</dockerHost>

                    <!-- 如果要将docker镜像push到DockerHub上去的话，这边的路径要和repo路径一致 -->
                    <imageName>${docker.host}:${docker.port}/${docker.image.prefix}/${project.artifactId}</imageName>
                    <forceTags>true</forceTags>

                    <!-- 指定Dockerfile所在的路径 -->
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>

                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
